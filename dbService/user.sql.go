// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package dbService

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (username, password) VALUES (?, ?) RETURNING id
`

type CreateUserParams struct {
	Username sql.NullString
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Username, arg.Password)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getUser = `-- name: GetUser :one
SELECT id, password FROM users WHERE username = ? LIMIT 1
`

type GetUserRow struct {
	ID       int64
	Password string
}

func (q *Queries) GetUser(ctx context.Context, username sql.NullString) (GetUserRow, error) {
	row := q.db.QueryRowContext(ctx, getUser, username)
	var i GetUserRow
	err := row.Scan(&i.ID, &i.Password)
	return i, err
}
